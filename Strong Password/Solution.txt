using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the minimumNumber function below.
    static int minimumNumber(int n, string password) {
        // Return the minimum number of characters to make the password strong
        
        int countCaps = 0, countSmall = 0, countSpecial = 0, countDigit=0;
        int noOfChar=0;
        char[] sarray = password.ToCharArray();
        foreach (char item in sarray) {
            if (Char.IsUpper(item))
            {
                countCaps++;
            }
            else if (Char.IsDigit(item))
            {
                countDigit++;
            }
            else if (Char.IsLower(item))
            {
                countSmall++;
            }
            else{
                countSpecial++;
            }    
        }
        if(countCaps==0){
            noOfChar++;
        }
        if(countDigit==0){
            noOfChar++;
        }
        if(countSmall==0){
            noOfChar++;
        }
        if(countSpecial==0){
            noOfChar++;
        }
        if (password.Length+noOfChar <6) {
                noOfChar = 6 - password.Length;
            }
        return noOfChar;
    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int n = Convert.ToInt32(Console.ReadLine());

        string password = Console.ReadLine();

        int answer = minimumNumber(n, password);

        textWriter.WriteLine(answer);

        textWriter.Flush();
        textWriter.Close();
    }
}
