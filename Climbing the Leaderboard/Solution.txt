using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;

class Solution {

    // Complete the climbingLeaderboard function below.
    static int[] climbingLeaderboard(int[] scores, int[] alice) {
        int[] result = new int[alice.Length];
        int index = 0;
        int[] newScore = scores.Distinct().ToArray();
        for (int j = 0; j < alice.Length; j++)
        {
            for (int i = 0; i < newScore.Length; i++)
            {
                if (i == newScore.Length - 1)
                {
                    if (alice[j] < newScore[i]) { result[index] = i + 2; index++; }
                    else if (alice[j] == newScore[i]) { result[index] = i + 1; index++; }
                }
                else if (alice[j] < newScore[i] && alice[j] >= newScore[i + 1])
                {
                    result[index] = i + 2;
                    index ++;
                    break;
                }
                else if (alice[j] >= newScore[0] ) { 
                    result[index] = 1 ; 
                    index++; 
                    break; 
                }
            }

        }
        return result;

    }

    static void Main(string[] args) {
        TextWriter textWriter = new StreamWriter(@System.Environment.GetEnvironmentVariable("OUTPUT_PATH"), true);

        int scoresCount = Convert.ToInt32(Console.ReadLine());

        int[] scores = Array.ConvertAll(Console.ReadLine().Split(' '), scoresTemp => Convert.ToInt32(scoresTemp))
        ;
        int aliceCount = Convert.ToInt32(Console.ReadLine());

        int[] alice = Array.ConvertAll(Console.ReadLine().Split(' '), aliceTemp => Convert.ToInt32(aliceTemp))
        ;
        int[] result = climbingLeaderboard(scores, alice);

        textWriter.WriteLine(string.Join("\n", result));

        textWriter.Flush();
        textWriter.Close();
    }
}
